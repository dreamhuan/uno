name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository_owner }}/${{ github.repository }}

jobs:

  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    -
      name: Checkout repository
      uses: actions/checkout@v3
    
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    -
      name: Setup Docker buildx
      uses: docker/setup-buildx-action@v2

    # Login against a Docker registry except on PR
    # https://github.com/docker/login-action
    - name: Log into registry ${{ env.REGISTRY }}
      uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # Extract metadata (tags, labels) for Docker
    # https://github.com/docker/metadata-action
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@59bc9ddfd5a31eb6f5b55e89b65578fe3bbba85e
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          # set latest tag for default branch
          type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
          # set beta tag for other branch
          type=raw,value=beta,enable=${{ github.ref != format('refs/heads/{0}', github.event.repository.default_branch) }}
          # will be used on schedule event
          type=schedule,pattern=weekly,suffix=-{{date 'YYYYMMDD'}}

    
    # Build and push Docker image with Buildx (don't push on PR)
    # https://github.com/docker/build-push-action
    - name: Build and push Docker image
      id: build-and-push
      uses: docker/build-push-action@v3
      with:
        context: .
        tags: ${{ steps.meta.outputs.tags }}
        platforms: linux/amd64,linux/arm64
        push: true
        cache-from: type=gha
        cache-to: type=gha,mode=max
